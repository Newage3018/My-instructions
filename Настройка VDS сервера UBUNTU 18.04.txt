https://www.digitalocean.com/
1. После установки ubuntu устанавливается LAMP (в случае VDS можно заказать его установку при развертывании сервера).
2. Получаем адрес сервера, пароль пользователя root от провайдера VDS.
3. Настройка подключения SSH, по  умолчанию сервер SSH уже запущен в ubuntu. Используя PUTTY или WINSCP, ввводим адрес сервера
логин - root, пароль попадаем на сервер.
Установим MC ( файловый менеджер):apt install mc
4. Подключаемся к серверу посредством PUTTY  и заводим нового пользователя admin - команда:"adduser admin" чтобы в дальнейшем все действия осуществлять
под этим пользователем, через sudo.
user:admin
password:ubuadmin
Для возможности управления с правами суперопользователя, нашего пользователя нужно добавить в группу пользовтелей sudo,
сделаем это с помощью команды:"usermod -aG sudo admin"
Для смены режима аутентификации с пароля на ключи SSH, в ситуации когда управляемый сервер на ubuntu а управление
производится с windows-машины, нужно запустить программу PuTTygen, входящую в состав комплекса PUTTY. Запускаем генерацию 
ключей (RSA), после того как ключи сформируются нужно, скопировать из верхнего окна содержимое ПУБЛИЧНОГО ключа, это содержимое 
нужно вставить в два файла, один находится на удаленном сервере в папке того пользователя для которого формируем доступ по ключу,
например для рута он находится в папке /root/.ssh/authorized_keys
а второй на windows-машине в локальной папке "с:/Users/пользователь/.ssh/root_pubkey.pub" - для примера, после вставки указанного фрагмента
и сохранения файлов - ОБЯЗАТЕЛЬНО НУЖНО СРАВНИТЬ РАЗМЕРЫ ЭТИХ ФАЙЛОВ - должны совпадать.
Далее нажать на кнопку "Save Private Key" и сохранить приватный ключ на windows-машине в файле "с:/Users/пользователь/.ssh/root_privatekey.ppk" - для примера
Далее Перезагрузить сервер - "reboot"
Запустить PUTTY и настроить соединение для использования ключей, выбираем профиль своего соединения - "Load", далее заходим в левом окне "SSH"(нажимая +),
далее выбираем Auth, и в нижней строке указываем путь с приватному ключу "с:/Users/пользователь/.ssh/root_privatekey.ppk", далее возврщаемся в верхнюю вкладку
"Session", и производим сохранение профиля "Save". После этих изменений имеем настроенный профиль для SSH подключения по ключу. ОДНАКО ТУТ НАЧИНАЕТСЯ САМОЕ ИНТЕРЕСНОЕ
, а именнно для того чтобы мы могли использовать множество пользователей, которые будут авторизоваться по ключу, мы должны произвести коррекцию конфигурационного
файла сервера SSH, расположенного по пути /etc/ssh/sshd_config (sshd - d обозначает daemon, т.е процесс запущенный на сервере), в нем раскоменетируем строку
AuthorizedKeysFile      /etc/ssh/authorized_keys было (.ssh/authorized_keys)  .ssh/authorized_keys2, после этого все публичные ключи добавляем в этот файл
 /etc/ssh/authorized_keys , еще проверить
права на чтения группы и любого пользователя.Генерация ключей и настройка профилей подключения в PUTTY, производится аналогично описанному выше

5.Произведем базовые настройки фаерволлла, с помощью команды "ufw app list", смотрим список разрешенных приложений
ufw allow ssh
ufw allow http
ufw allow https
ufw enable

6.Установка SSL-сертификатов на сервер, для возможности работы https.
Условия, которрые нужно соблюсти при установке:
Установленный сервер ubuntu 18.04;
Установлен и настроен пользователь с доступом sudo;
Установлен и настроен фаерволл ufw;
Имеется зарегистрированное доменное имя, и создан виртуальный хост на сервере(т.е создана папка /var/www/имя_домена) и настроен Apache2;
для переезда домена  на новый хостинг нужно, у провайдера , где ранее хостился домен, в качестве DNS- северов, указать
DNS-сервера нового провайдера. Внести изменения в А-записи DNS (aio.com.ru 	A 	188.225.77.2 ), т.е соответствие доменного имени и IP-адреса хоста, где
хоститься домен( происходит автоматом при  переезде). 
Здесь опишем создание виртуального хоста: (для примера свой -aio.com.ru)
Создаем папку для своего домена:sudo mkdir /var/www/aio.com.ru
Назначаем владение каталогом, через переменную среды $USER:sudo chown -R $USER:$USER /var/www/aio.com.ru
Меняется разрешения для каталога домена:sudo chmod -R 755 /var/www/aio.com.ru
Создаем тестовую страницу html в этом каталоге:nano /var/www/aio.com.ru/index.html, ниже пример ее содержимого для вставки
<html>
    <head>
        <title>Welcome to Your_domain!</title>
    </head>
    <body>
        <h1>Success!  The your_domain virtual host is working!</h1>
    </body>
</html>
сохранить и закрыть файл
Нужно создать конфигурационный файл Apache2 для нашего виртуального хоста (aio.com.ru):sudo nano /etc/apache2/sites-available/aio.com.ru.conf
и вставляем вот такое содержимое:
<VirtualHost *:80>
    ServerAdmin webmaster@localhost
    ServerName aio.com.ru
    ServerAlias www.aio.com.ru
    DocumentRoot /var/www/aio.com.ru
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>
сохранить и закрыть файл
Нужно включить сайт( ввести домен в работу) с помощью команды:sudo a2ensite aio.com.ru.conf
Нужно выключить сайт по умолчанию( домен по умолчанию) с помощью команды:sudo a2dissite 000-default.conf
Нужно проверить возможные ошибки конфигурации:sudo apache2ctl configtest, должны получить ответ:Syntax OK
Будет появляться ошибка, нужно в конец файла:sudo nano /etc/apache2/apache2.conf добавить:ServerName 127.0.0.1, сохранить и еще раз проверить:sudo apache2ctl configtest
Нужно перезапустить сервер Apache командой:sudo systemctl restart apache2

7. Собственно сама установка SSL-сертификата, и возможность работы по https:
Нужно установить пакет Certbot, для этого добавляем репозиторий данного пакета:sudo add-apt-repository ppa:certbot/certbot
выходит ошибка, якобы не найдена такая команда, для исправления вводим две команды
sudo apt-get install software-properties-common
sudo apt-get update
еще раз вводим:sudo add-apt-repository ppa:certbot/certbot
далее нужно установить пакет Certbot для Apache2:sudo apt install python-certbot-apache
проверить, что в файле /etc/apache2/sites-available/aio.com.ru.conf, существует запись:ServerName aio.com.ru
для того, чтобы Certbot смог внести свои изменения.
проверяем правильность конфигурации Apache:sudo apache2ctl configtest
перезагружаем сервер:sudo systemctl reload apache2
Теперь нужно настроить фаерволл ufw, а именно разрешить apache слушать порты http и https, это команда:sudo ufw allow 'Apache Full'
и удаляем отдельное правило для http:sudo ufw delete allow 'Apache'
Теперь нужно запустить Certbot и получить SSL-сертификат:sudo certbot --apache -d aio.com.ru -d www.aio.com.ru
Читаем, выбираем, получаем итоговый результат - сертификат ssl.
Настроим автоматичексое продление сертификата, точнее проверить настройку его продления:sudo systemctl status certbot.timer
То есть если активен certbot.timer то все нормально процесс обновления сертификата будут запускаться автоматически.
Для тестирования процесса обновления сертификата:sudo certbot renew --dry-run
Если нет ошибок - то обновление прошло успешно, когда наступит время Certbot сам обновит сертификат,
если обновление пройдет не успешно, на почту(указанную при установке certbot) придет сообщение о том,
что срок действия сертификата истек.



8.Для удобства работы с базой MYSQL, нужно установить PHPMYADMIN. 
sudo apt update
sudo apt install phpmyadmin php-mbstring php-gettext
нужно выьрать пробелом, потом tab, и продолжение установки
В процессе установки файл конфигурации Apache phpMyAdmin
добавляется в каталог / etc / apache2 / conf-enabled /,
где он читается автоматически. Единственное, что вам нужно сделать, 
это явно включить расширение PHP mbstring, что вы можете сделать, набрав:
sudo phpenmod mbstring
и сделать рестарт apache2
sudo systemctl restart apache2
теперь phpmyadmin установлен и настроен
для уменьшения возможностей взлома баз через phpmyadmin используется дополнительная настройка безопасности Apache
Для этого сначала нужно настроить пользователей  MYSQL
По умолчанию у root пользователя MYSQL отключена аутентификация по паролю,это можно проверить командой
SELECT user,authentication_string,plugin,host FROM mysql.user;
нужно включить ее
sudo mysql так заходим в mysql, появляется приглашение mysql>
вводим:ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';
этой командой пользователю root устанавливается пароль (меняем password на свой пароль);
Применяем изменения командой:FLUSH PRIVILEGES;
проверить что изменения применились можно опять командой:
SELECT user,authentication_string,plugin,host FROM mysql.user;
Настроим дополнительного ( отличного от root ) пользователя mysql
введем команду:mysql -u root -p (эта команда для входа в mysql как root по паролю)
появляется приглашение mysql>
создадим нового пользователя mysql командой:
CREATE USER 'user'@'localhost' IDENTIFIED BY 'password'; конкретно мой вариант будет
CREATE USER 'mybase'@'localhost' IDENTIFIED BY '20Fhntv06';
далее предоставим новому пользователю mybase, все права на все базы и табллицы, командой;
GRANT ALL PRIVILEGES ON *.* TO 'mybase'@'localhost' WITH GRANT OPTION;
далее выходим из mysql командой:exit
Теперь рассмотрим непосредственно как создается улучшение безопасности phpmyadmin с помощью Apache
Из-за своей повсеместности phpMyAdmin является популярной целью для злоумышленников, 
и вам следует принять дополнительные меры для предотвращения несанкционированного доступа. 
Один из самых простых способов сделать это - разместить шлюз перед всем приложением phpmyadmin 
с помощью встроенных в Apache функций аутентификации и авторизации .htaccess. 
Для этого вы должны сначала включить использование переопределений файла .htaccess,
отредактировав файл конфигурации Apache.
sudo nano /etc/apache2/conf-available/phpmyadmin.conf
Добавьте директиву AllowOverride All в раздел <Directory /usr/ share/phpmyadmin> файла конфигурации, например:
<Directory /usr/share/phpmyadmin>
    Options FollowSymLinks
    DirectoryIndex index.php
    AllowOverride All
то есть запись AllowOverride All разрешает применение файла .htaccess.
далее сохранить и закрыть файл, перезапустить Apache
sudo systemctl restart apache2
Теперь, когда вы включили использование .htaccess для своего приложения,
вам нужно создать его, чтобы фактически реализовать некоторую безопасность.
создаем файл .httaccess  в каталоге phpmyadmin
sudo nano /usr/share/phpmyadmin/.htaccess
добавляем в файл:
AuthType Basic
AuthName "Restricted Files"
AuthUserFile /etc/phpmyadmin/.htpasswd
Require valid-user
далее сохранить и закрыть файл

Поясним , что есть что:
AuthType Basic - в этой строке указывается тип аутентификации, который вы реализуете. 
Этот тип будет реализовывать аутентификацию по паролю с использованием файла паролей.
AuthName: устанавливает сообщение для диалогового окна аутентификации. Вы должны сохранить это общее,
чтобы неавторизованные пользователи не получали никакой информации о том, что защищается.
AuthUserFile: устанавливает расположение файла паролей, который будет использоваться для аутентификации.
Это должно быть за пределами обслуживаемых каталогов. Вскоре мы создадим этот файл.
Require valid-user:Требовать действительного пользователя: указывает, что доступ к этому ресурсу должен быть предоставлен
только аутентифицированным пользователям. Это то, что на самом деле останавливает проникновение неавторизованных пользователей.

Расположение, которое вы выбрали для файла паролей, было /etc/phpmyadmin/.htpasswd.
Теперь вы можете создать этот файл и передать его начальному пользователю с помощью утилиты htpasswd:
sudo htpasswd -c /etc/phpmyadmin/.htpasswd username, в моем варианте:sudo htpasswd -c /etc/phpmyadmin/.htpasswd gatebase
идет запрос пароля: вводим пароль, в моем случае gate2020, повторяем пароль,получаем сообщение - пароль добавлен.
Если вы хотите ввести дополнительного пользователя, вам нужно сделать это без флага -c, например:
sudo htpasswd /etc/phpmyadmin/.htpasswd additionaluser

Теперь, когда вы входите в свой подкаталог phpMyAdmin, вам будет предложено ввести имя промежуточной(дополнительной) учетной записи и пароль,
которые вы только что настроили:

После входа в аутентификацию Apache вы попадете на обычную страницу аутентификации phpMyAdmin,
чтобы ввести свои учетные данные MySQL. Эта настройка добавляет дополнительный уровень безопасности,
что желательно, поскольку phpMyAdmin в прошлом страдал от уязвимостей.

На этом натстройка phpmyadmin и его безопасности настроены.

Настройка Wordpress
Копируем с помощью WINSCP все файлы ( после рапаковки) wordpress в папку /var/www/aio.com.ru/
Вводим aio.com.ru в строке браузера и устанавливаем wordpress.
Открываем админку и устанавливаем необходимые плагины, на этом этапе wordpress запрашивает пользователя и пароль
для сервера FTP(SFTP) нашего сайта, т.е пользователя, имеющего полный доступ на каталог (и его файлы) /var/www/aio.com.ru/wp-content/  
Пока у нас нет такого пользователя , точнее есть пользователь www-data, имеющий полный доступ на /var/www...., но мы попробуем 
создать пользователя имеющего полный доступ только к  /var/www/aio.com.ru/wp-content/
для этого создать группу владельца этого каталога.
Создадим нового пользователя, например wp
sudo adduser wp
При этом, создаться пользователь "wp", группа пользователя "wp", каталог пользователя /home/wp/
нужно задать пароль пользователя, спросит система, зададим его, в моем случае будет вот такой:!hFrdma@klt
Затем нужно изменить пользователя каталога /var/www/aio.com.ru/wp-content/, по умолчанию был root
тут уменя возникла проблема -меняю пользователей, права, а wordpress , не может создать каталог при подключении по ftp (пока не понял в чем причина)
FTP  в убунту не устноавлена, устанавливаем сервис vsftpd, sudo apt install vsftpd, ДЛЯ создания режима FTPS нужно разрешить работу под SSL, в конфигурационном
файле - предварительно сохраним его (sudo cp /etc/vsftpd.conf /etc/vsftpd.conf.orig) , /etc/vsftpd.conf внесем изменения

Просмотр прослушиваемых портов TCP, UDP
Команда ss - это улучшенная версия netstat. Точно так, как для замены ifconfig была придумана утилита ip, ss разработали для замены netstat.
Команда будет выглядеть следующим образом:
 ss -ltupn

Настройка авторизованного доступа по FTP
Прежде чем вносить какие-либо изменения в конфигурационный файл, рекомендуется скопировать образец для возможности отката изменений без переустановки пакета
sudo cp /etc/vsftpd.conf /etc/vsftpd.conf.orig
Для аутентификации локальных пользователей надо раскоментировать строчку

local_enable=YES
По умолчанию vsftpd настроен на аутентификацию системных пользователей с возможностью получать файлы. Если вы хотите пользователям разрешить загружать файлы, измените в /etc/vsftpd.conf:

write_enable=YES
после чего перезагрузите vsftpd:

sudo service vsftpd restart
Теперь при входе системных пользователей по FTP они будут попадать в свои домашние каталоги, где они смогут скачивать, загружать [файлы], создавать каталоги и т.д.

Защита FTP
Ограничение пользователей
В /etc/vsftpd.conf существуют опции, помогающие сделать vsftpd более безопасным. Например, данная опция позволяет поместить локального пользователя
 в chroot() «заточение», выше которого (по дереву каталогов) он не сможет подняться.

chroot_local_user=YES
Вы также можете определить список пользователей, имеющих доступ только в домашний каталог:

chroot_list_enable=YES
chroot_list_file=/etc/vsftpd.chroot_list
После снятия комментариев с этих опций, создайте /etc/vsftpd.chroot_list, содержащий список пользователей по одному на строку. Затем перезапустите vsftpd:

sudo service vsftpd restart

Если вы сняли комментарии со всех трёх строчек, то пользователи из списка не будут ограничены своими домашними каталогами,
в отличии от пользователей не вошедших в список





ГлавнаяИнформацияОткрытые порты Ubuntu
ОТКРЫТЫЕ ПОРТЫ UBUNTUИнформация Обновлено:  13 февраля, 2018  2  admin 
 ubuntu, безопасность
В современных операционных системах не обойтись без взаимодействия программ с внешней средой и интернетом.  Для этого используется специальные механизмы - порты.

Но порты представляют определённую угрозу. Если в программе есть какая-либо уязвимость, то любой пользователь локальной сети сможет получить доступ к вашему компьютеру, а в некоторых случаях даже к вашей информации. Поэтому нужно быть очень осторожным с открытыми портами. В этой статье мы разберёмся, как посмотреть открытые порты Ubuntu.

Содержание статьи:

Что такое порты и зачем они нужны?
Открытые порты Ubuntu
netstat
lsof
ss
nmap
Выводы
ЧТО ТАКОЕ ПОРТЫ И ЗАЧЕМ ОНИ НУЖНЫ?
Порты - это более широкое понятие, чем просто возможность подключится к удалённому компьютеру через сеть. Когда процесс хочет обратиться к серверу, ему нужно каким-либо образом идентифицировать, к какому серверу он хочет подключиться. Если мы знаем 32 битный IP-адрес сервера, то мы можем без проблем к нему подключиться.

Но как указать программу, к которой нужно обратиться? Для решения этой проблемы оба протокола UDP и TCP поддерживают систему портов. Порт - это целое число от 1024 до 65535. Все номера до 1024 зарезервированы и используются только определёнными службами, например, 22 - ssh, http - 80, FTP - 21 и так далее.

Таким образом, процесс прослушивает определённый порт на сервере, а клиент, который хочет к нему обратиться, должен знать этот порт. Вся обработка прав доступа к портам в большинстве случаев ложится на процесс, поэтому если в его коде есть уязвимости, то это может стать серьёзной проблемой безопасности.

ОТКРЫТЫЕ ПОРТЫ UBUNTU
Существуют не только порты, к которым программы подключаются удалённо, но и локальные порты, используемые программами для общения между собой.
В качестве локальных также могут использоваться удалённые.
В Linux существует несколько утилит, которые можно использовать, чтобы посмотреть открытые порты.
Одни из них полноценные сетевые сканеры, другие - локальные утилиты, отображающие всю доступную информацию. Рассмотрим основные из них.

NETSTAT
Это одна из самых старых и популярных утилит для просмотра открытых портов. Мы описывали её в отдельной статье, а сейчас просто кратко рассмотрим, как с ней работать. Чтобы посмотреть открытые порты, выполните такую команду:

 netstat -ntlp | grep LISTEN

Опция -l сообщает, что нужно посмотреть прослушиваемые порты, -p  показывает имя программы, -t и -u - отображают TCP и UDP порты, а -n показывает ip адреса в числовом виде. Дальше нужно выбрать только те строки, где встречается слово LISTEN, чтобы найти только прослушиваемые порты.



Здесь в первом столбце отображается протокол, затем два столбца - это данные, которые нам ничего полезного не говорят, а за ними уже идут локальный и внешний адреса. Если локальный адрес - 127.0.0.1, то это значит, что сервис доступен только на этом компьютере, а значение 0.0.0.0 или :: означает любой адрес, к таким сервисам могут подключаться из сети. В нашем примере это Apache и systemd-resolvd.

LSOF
Утилита lsof тоже предназначена для просмотра открытых соединений. Основная ее функция - просмотр открытых файлов, но с её помощью можно посмотреть открытые порты Ubuntu. Используйте такие параметры:

 sudo lsof -nP -i | grep LISTEN



Опции -n и -P указывают, что необходимо отображать не только цифровые имена портов и ip-адреса, но и  имена доменов и сервисов. Опция -i отображает все сетевые подключения, а с помощью grep мы фильтруем только те, которые находятся в состоянии прослушивания.

Представление информации немного отличается, но в общем и целом мы видим всё ту же информацию. Кроме неё, здесь ещё отображается имя пользователя, от которого запущен процесс. Вы можете не ограничиваться фильтрами и посмотреть все доступные соединения:

 sudo lsof -nP -i



 

Просмотр прослушиваемых портов TCP, UDP
Команда ss - это улучшенная версия netstat. Точно так, как для замены ifconfig была придумана утилита ip, ss разработали для замены netstat.
Команда будет выглядеть следующим образом:
 ss -ltupn


Неудивительно,
   что один из них называется ssh_config, а другой - sshd_config. Лишняя
   буква <<d>> в названии произошла от слова <<daemon>> (тут
   подразумевается SSH демон или, другими словами, SSH сервер)

Чтобы добавить пользователя "vasya" в группу "www-data", необходимо в терминале (CTRL+ALT+T) выполнить следующую команду:

sudo usermod -aG www-data vasya
-a добавить пользователя в дополнительную группу. Используется только вместе с опцией -G
-G <группы_через_запятую_без_пробелов> — список дополнительных групп (если указано больше одной группы, то разделитель — запятая)
Не забываем справку

man usermod
Посмотреть текущие группы

groups
Чтобы увидеть результат, нужно перелогиниться.

$ sudo chown опции "новый_владелец":"новая_группа" /путь/к/папке

ПНапример, чтобы сменить владельца папки ~/Видео/losst/ на testuser следует выполнить такую команду и группу на testuser:

sudo chown testuser:testuser ~/Видео/losst

1. Файл /etc/group

Все группы, созданные в ОС Linux собраны в файле /etc/group. Синтаксис записи группы в этом файле следующий:

имя_группы:x:идентификатор:список_пользователей

    имя_группы - имя, которое используется для управления группой и отображается в выводе команд;
    x - заглушка для пароля;
    идентификатор - уникальный идентификатор группы;
    список_пользователей - все пользователи, которые входят в группу, разделённые запятой.

